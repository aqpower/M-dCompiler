program -> block
block -> { stmts }
stmts -> stmt stmts 
        | Îµ
stmt -> id = expr ; 
        | if ( bool ) stmt 
        | if ( bool) stmt else stmt 
        | while (bool) stmt 
        | block
        
bool -> | expr
        | expr < expr 
        | expr <= expr 
        | expr > expr 
        | expr >= expr 
        
expr -> term 
        | expr + term 
        | expr - term 
term -> factor 
        | term * factor 
        | term / factor 
factor -> ( expr ) 
        | ID 
        | NUM
